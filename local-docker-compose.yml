services:
  
  web:
    container_name: web
    image: web
    build: 
       context: .
       dockerfile: ./docker/local/django/Dockerfile

    restart: always
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    command: /start.sh  

    env_file:
      - ./envs/local/django.env
      - ./envs/local/postgres.env
    ports:
      - "8000:8000"

    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    container_name: db
    build:
       context: .
       dockerfile: ./docker/local/postgres/Dockerfile

    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_backup:/backups         
    env_file:
      - envs/local/postgres.env

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
        - "8888:80"
    depends_on:
      - db    

  redis:
    container_name: 'redis'
    image: 'redis'
    restart: always

  rabbitmq:
     container_name: 'rabbitmq'
     image: 'rabbitmq:management'
     restart: always
     ports:
       - '5672:5672'
       - '15672:15672'

  
  celery:
    container_name: celery
    image: celery
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile

    restart: always
    volumes:
      - ./core:/app
    command: >
      sh -c "celery -A config worker -l INFO -Q tasks,dead_letter"

    env_file:
      - ./envs/local/django.env
      - ./envs/local/postgres.env  

    depends_on:
      - redis
      - rabbitmq
      - web 
      
  flower:
    container_name: flower
    image: mher/flower
    ports:
      - "5555:5555"
    env_file:
      - ./envs/local/django.env


    restart: always
    depends_on:
      - rabbitmq            


volumes:
  local_postgres_data:
  local_postgres_backup:
  static_volume:
  media_volume:


